{"version":3,"sources":["redux/actions/actionTypes.js","service/date-utils.js","redux/reducers/rootReducer.js","redux/reducers/listReducer.js","redux/store.js","service/localStorage.js","service/url.js","service/axiosService.js","redux/actions/actionCreators.js","components/Item/Item.js","components/Row/Row.js","components/Employees/Employees.js","components/SelectedItem/SelectedItem.js","components/BirthdayMonth/BirthdayMonth.js","components/EmployeesBirthday/EmployeesBirthday.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["STORE_DATA","FETCH_FAILURE","SELECT_EMPLOYEE","DESELECT_EMPLOYEE","compare","date1","date2","Date","getMonth","dateDisplay","date","dateObj","day","toLocaleString","month","year","rootReducer","combineReducers","list","state","isLoaded","data","selected","action","type","filter","item","id","payload","sort","a","b","dob","findIndex","el","push","errData","middleware","thunk","persistedState","serializedState","localStorage","getItem","JSON","parse","err","loadState","store","createStore","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","URL","axiosService","axios","fetchSuccess","body","fetchFailure","deselectEmployee","employee","Item","props","dispatch","useDispatch","useSelector","useState","checkbox","setCheckbox","firstName","lastName","useEffect","undefined","find","className","checked","onChange","e","target","Row","filteredNames","toUpperCase","letter","localeCompare","length","map","Employees","letters","split","SelectedItem","onClick","BirthdayMonth","EmployeesBirthday","months","forEach","indexOf","App","service","response","fetchData","path","exact","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","subscribe","stringify","setItem","console","error","saveState","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fa8d0303.chunk.js","sourcesContent":["export const STORE_DATA = 'STORE_DATA';\nexport const FETCH_FAILURE = 'FETCH_FAILURE';\nexport const SELECT_EMPLOYEE = 'SELECT_EMPLOYEE';\nexport const DESELECT_EMPLOYEE = 'DESELECT_EMPLOYEE';\n","export const compare = (date1, date2) => {\n  return new Date(date1).getMonth() - new Date(date2).getMonth();\n};\n\nexport const dateDisplay = (date) => {\n  const dateObj = new Date(date);\n  const day = dateObj.toLocaleString('default', { day: 'numeric' });\n  const month = dateObj.toLocaleString('default', { month: 'long' });\n  const year = dateObj.toLocaleString('default', { year: 'numeric' });\n  return `${day} ${month}, ${year} year`;\n};\n\nexport const getMonth = (date) => {\n  return new Date(date).toLocaleString('default', { month: 'long' });\n};\n","import { combineReducers } from 'redux';\nimport { listReducer } from './listReducer';\n\nexport const rootReducer = combineReducers({\n  list: listReducer,\n});\n","import {\n  DESELECT_EMPLOYEE,\n  STORE_DATA,\n  FETCH_FAILURE,\n  SELECT_EMPLOYEE,\n} from '../actions/actionTypes';\nimport { compare } from '../../service/date-utils';\n\nexport const listReducer = (state = { isLoaded: false, data: [], selected: [] }, action) => {\n  switch (action.type) {\n    case DESELECT_EMPLOYEE:\n      state.selected = state.selected\n        // Remove item\n        .filter((item) => item.id !== action.payload.id)\n        // Sort items by month\n        .sort((a, b) => compare(a.dob, b.dob));\n      return { ...state };\n\n    case SELECT_EMPLOYEE:\n      if (state.selected.findIndex((el) => el.id === action.payload.id) === -1) {\n        state.selected.push(action.payload);\n        // Sort items by month\n        state.selected.sort((a, b) => compare(a.dob, b.dob));\n      }\n      return { ...state };\n\n    case STORE_DATA:\n      return {\n        ...state,\n        data: action.payload,\n        isLoaded: true,\n      };\n\n    case FETCH_FAILURE:\n      return {\n        ...state,\n        isLoaded: false,\n        errData: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { rootReducer } from './reducers/rootReducer';\nimport { loadState } from '../service/localStorage';\n\nconst middleware = [thunk];\n\nconst persistedState = loadState();\n\nexport const store = createStore(\n  rootReducer,\n  persistedState,\n  compose(\n    applyMiddleware(...middleware),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n","export const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem('state');\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return undefined;\n  }\n};\n\nexport const saveState = (state) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem('state', serializedState);\n  } catch (err) {\n    console.error(err);\n  }\n};\n","export const URL = 'https://yalantis-react-school-api.yalantis.com/api/task0/users';\n","import axios from 'axios';\nimport { URL } from './url';\n\nexport const axiosService = async () => {\n  return await axios(URL);\n};\n","import { axiosService } from '../../service/axiosService';\nimport { URL } from '../../service/url';\nimport { STORE_DATA, FETCH_FAILURE, SELECT_EMPLOYEE, DESELECT_EMPLOYEE } from './actionTypes';\n\nexport const fetchData = (service = axiosService) => async (dispatch) => {\n  try {\n    const response = await service(URL);\n    dispatch(fetchSuccess(response.data));\n  } catch (err) {\n    dispatch(fetchFailure(err));\n  }\n};\n\nexport const fetchSuccess = (body) => {\n  return {\n    type: STORE_DATA,\n    payload: body,\n  };\n};\n\nexport const fetchFailure = (err) => {\n  return {\n    type: FETCH_FAILURE,\n    payload: err,\n  };\n};\n\nexport const selectEmployee = (employee) => {\n  return {\n    type: SELECT_EMPLOYEE,\n    payload: employee,\n  };\n};\n\nexport const deselectEmployee = (employee) => {\n  return {\n    type: DESELECT_EMPLOYEE,\n    payload: employee,\n  };\n};\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deselectEmployee, selectEmployee } from '../../redux/actions/actionCreators';\nimport './Item.scss';\n\nexport const Item = (props) => {\n  const dispatch = useDispatch();\n  const state = useSelector((state) => state.list);\n  const [checkbox, setCheckbox] = useState(false);\n  const { id, firstName, lastName } = props.item;\n\n  const handleTick = () => {\n    setCheckbox(state.selected.find((item) => item.id === id) !== undefined);\n  };\n\n  const handleClick = (e) => {\n    setCheckbox(e.target.checked);\n    if (e.target.checked) {\n      dispatch(selectEmployee(props.item));\n    } else {\n      dispatch(deselectEmployee(props.item));\n    }\n  };\n\n  useEffect(() => {\n    handleTick();\n  });\n\n  return (\n    <div className=\"Item\">\n      <label className=\"Item-name\">\n        {lastName} {firstName}\n        <input\n          className=\"Item-checkbox\"\n          type=\"checkbox\"\n          checked={checkbox}\n          onChange={handleClick}\n        />\n      </label>\n    </div>\n  );\n};\n","import { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Item } from '../Item/Item';\nimport './Row.scss';\n\nexport const Row = (props) => {\n  const state = useSelector((state) => state.list);\n\n  const filteredNames = state.data\n    .filter((item) => item.lastName.toUpperCase()[0] === props.letter)\n    .sort((a, b) => a.lastName.localeCompare(b.lastName));\n\n  const renderNames = () => {\n    if (state.isLoaded && filteredNames.length > 0) {\n      return filteredNames.map((item) => <Item key={item.id} item={item} />);\n    } else {\n      return '------';\n    }\n  };\n\n  useEffect(() => {}, [state.selected]);\n\n  return (\n    <div className=\"Row\">\n      <h3>{props.letter}</h3>\n      <ul>{renderNames()}</ul>\n    </div>\n  );\n};\n","import { Row } from '../Row/Row';\nimport './Employees.scss';\n\nexport const Employees = () => {\n  // Create alphabet\n  const letters = 'abcdefghijklmnopqrstuvwxyz'.toUpperCase().split('');\n  const renderRows = () => {\n    return letters.map((letter) => <Row key={letter} letter={letter} />);\n  };\n\n  return (\n    <div className=\"container Employees\">\n      <h2>Employees</h2>\n      <div className=\"scroller\">{renderRows()}</div>\n    </div>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { deselectEmployee } from '../../redux/actions/actionCreators';\nimport { dateDisplay } from '../../service/date-utils';\nimport './SelectedItem.scss';\n\nexport const SelectedItem = (props) => {\n  const dispatch = useDispatch();\n  const { firstName, lastName, dob } = props.item;\n\n  const handleClick = (e) => {\n    dispatch(deselectEmployee(props.item));\n  };\n\n  return (\n    <li className=\"SelectedItem\">\n      <p onClick={handleClick}>\n        {lastName} {firstName} - {dateDisplay(dob)}\n      </p>\n    </li>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { getMonth } from '../../service/date-utils';\nimport { SelectedItem } from '../SelectedItem/SelectedItem';\nimport './BirthdayMonth.scss';\n\nexport const BirthdayMonth = (props) => {\n  const state = useSelector((state) => state.list);\n\n  return (\n    <div className=\"BirthdayMonth\">\n      <h3>{props.month}</h3>\n      <ul>\n        {state.selected\n          .filter((el) => getMonth(el.dob) === props.month)\n          .map((el) => (\n            <SelectedItem key={el.id} item={el} />\n          ))}\n      </ul>\n    </div>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { getMonth } from '../../service/date-utils';\nimport { BirthdayMonth } from '../BirthdayMonth/BirthdayMonth';\nimport './EmployeesBirthday.scss';\n\nexport const EmployeesBirthday = () => {\n  const state = useSelector((state) => state.list);\n  const months = [];\n\n  const renderMonths = () => {\n    return months.length > 0 ? (\n      months.map((el) => <BirthdayMonth key={el} month={el} />)\n    ) : (\n      <h3 className=\"empty-title\">No selected employees</h3>\n    );\n  };\n  // Select all months which are in selected state\n  state.selected.forEach((el) => {\n    const month = getMonth(el.dob);\n    if (months.indexOf(month) === -1) {\n      months.push(month);\n    }\n  });\n\n  return (\n    <div className=\"container EmployeesBirthday\">\n      <h2>Employees birthday</h2>\n      <div className=\"wrapper\">\n        <div className=\"presentation\">{renderMonths()}</div>\n      </div>\n    </div>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { HashRouter, Route, Switch, Link } from 'react-router-dom';\nimport { fetchData } from '../../redux/actions/actionCreators';\nimport { Employees } from '../Employees/Employees';\nimport { EmployeesBirthday } from '../EmployeesBirthday/EmployeesBirthday';\nimport './App.scss';\n\nfunction App() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchData());\n  }, []);\n  return (\n    <HashRouter>\n      <Switch>\n        <Route path=\"/\" exact>\n          <Link id=\"employees-link\" to=\"/employees\">\n            <h1>Go To Employees</h1>\n          </Link>\n        </Route>\n        <Route path=\"/employees\">\n          <main className=\"App\">\n            <Employees />\n            <EmployeesBirthday />\n          </main>\n        </Route>\n      </Switch>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\nimport { saveState } from './service/localStorage';\n\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\n// Subscribe for local storage service\nstore.subscribe(() => {\n  saveState(store.getState());\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}